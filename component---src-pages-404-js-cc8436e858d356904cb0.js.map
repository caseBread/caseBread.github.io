{"version":3,"file":"component---src-pages-404-js-cc8436e858d356904cb0.js","mappings":"uLAOA,MAJ6B,IACpBA,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,KAAI,sBCWtB,MAZoB,IAEhBF,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,cACbH,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKI,IAAI,8BAA8BC,IAAI,aAE7CL,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,UAAS,UCIxB,MATyB,IAErBF,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,yGACbH,EAAAA,cAACM,EAAU,MACXN,EAAAA,cAACO,EAAW,OCiBlB,MArBe,IAAoC,IAAnC,SAAEC,EAAQ,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MACMC,EADY,MACCH,EAASI,SAE5B,OACE,gCACE,0BAAQT,UAAU,qCAChB,gBAAC,EAAM,OAET,uBAAKA,UAAU,iBAAiB,oBAAmBQ,GACjD,4BAAOD,GACP,8BAAQ,MACH,IAAIG,MAAOC,cAAc,eAC1B,IACF,qBAAGC,KAAK,4BAA2B,YAGtC,C,+CC4BP,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEP,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBX,MAExC,OACE,gCACE,6BAAQY,EAAgB,GAAEZ,OAAWY,IAAiBZ,GACtD,wBAAMa,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASd,IACnC,wBAAMe,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAY,KAElD,wBAAMJ,KAAK,gBAAgBC,QAASd,IACpC,wBAAMa,KAAK,sBAAsBC,QAASJ,IACzCT,EACA,C,kGCvCP,MAWaiB,EAAO,IAAM,gBAAC,IAAG,CAAClB,MAAM,mBAErC,UAbqB,IAAwB,IAAvB,KAAEmB,EAAI,SAAEpB,GAAU,EACtC,MAAMqB,EAAYD,EAAKX,KAAKG,aAAaX,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOoB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/header/logo/index.tsx","webpack://gatsby-starter-blog/./src/components/header/menus/index.tsx","webpack://gatsby-starter-blog/./src/components/header/index.tsx","webpack://gatsby-starter-blog/./src/components/layout.jsx","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\nconst HeaderLogo: React.FC = () => {\n  return <Link to=\"/\">caseBread`s devlog</Link>;\n};\n\nexport default HeaderLogo;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nconst HeaderMenus = () => {\n  return (\n    <div className=\"flex gap-8\">\n      <button>\n        <img src=\"/icon/ic-darkmode-light.svg\" alt=\"다크모드-전환\" />\n      </button>\n      <Link to=\"/about\">about</Link>\n      {/* <Link to=\"/posts\">posts</Link> */}\n    </div>\n  );\n};\n\nexport default HeaderMenus;\n","import React from \"react\";\nimport HeaderLogo from \"./logo\";\nimport HeaderMenus from \"./menus\";\n\nconst Header: React.FC = () => {\n  return (\n    <div className=\"h-[50px] fixed w-full border-b-1 border-b-gray-300 flex justify-between items-center px-10 bg-default\">\n      <HeaderLogo />\n      <HeaderMenus />\n    </div>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport Header from \"./header\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n\n  return (\n    <>\n      <header className=\"global-header flex justify-center\">\n        <Header />\n      </header>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["React","Link","to","className","src","alt","HeaderLogo","HeaderMenus","location","title","children","isRootPath","pathname","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}