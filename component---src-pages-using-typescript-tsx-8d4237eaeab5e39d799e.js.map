{"version":3,"file":"component---src-pages-using-typescript-tsx-8d4237eaeab5e39d799e.js","mappings":"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","sources":["webpack://devlog/./src/pages/using-typescript.tsx","webpack://devlog/./src/components/header/logo/index.tsx","webpack://devlog/./src/components/header/menus/index.tsx","webpack://devlog/./src/components/header/index.tsx","webpack://devlog/./src/components/layout.jsx","webpack://devlog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nconst HeaderLogo: React.FC = () => {\n  return <Link to=\"/\">caseBread`s devlog</Link>;\n};\n\nexport default HeaderLogo;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\n\nconst HeaderMenus = () => {\n  return (\n    <div className=\"flex gap-8\">\n      <button>\n        <img src=\"/icon/ic-darkmode-light.svg\" alt=\"다크모드-전환\" />\n      </button>\n      <Link to=\"/about\">about</Link>\n      {/* <Link to=\"/posts\">posts</Link> */}\n    </div>\n  );\n};\n\nexport default HeaderMenus;\n","import React from \"react\";\nimport HeaderLogo from \"./logo\";\nimport HeaderMenus from \"./menus\";\n\nconst Header: React.FC = () => {\n  return (\n    <div className=\"h-[50px] fixed w-full border-b-1 border-b-gray-300 flex justify-between items-center px-10 bg-default\">\n      <HeaderLogo />\n      <HeaderMenus />\n    </div>\n  );\n};\n\nexport default Header;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport Header from \"./header\";\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`;\n  const isRootPath = location.pathname === rootPath;\n\n  return (\n    <>\n      <header className=\"global-header flex justify-center\">\n        <Header />\n      </header>\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","HeaderLogo","HeaderMenus","className","src","alt","Header","children","isRootPath","pathname","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}